// Generated by BUCKLESCRIPT VERSION 3.1.1, PLEASE EDIT WITH CARE
'use strict';

var Json = require("@glennsl/bs-json/lib/js/src/Json.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var BsCallback = require("bs-callback/lib/js/src/bsCallback.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Child_process$LidcoreBsNode = require("@lidcore/bs-node/lib/js/src/child_process.js");

function downloader_options(json) {
  return /* record */[/* http_chunk_size */Json_decode.optional((function (param) {
                  return Json_decode.field("http_chunk_size", Json_decode.$$int, param);
                }), json)];
}

function format(json) {
  return /* record */[
          /* http_headers */Json_decode.optional((function (param) {
                  return Json_decode.field("http_headers", (function (param) {
                                return Json_decode.dict(Json_decode.string, param);
                              }), param);
                }), json),
          /* format_note */Json_decode.optional((function (param) {
                  return Json_decode.field("format_note", Json_decode.string, param);
                }), json),
          /* format */Json_decode.optional((function (param) {
                  return Json_decode.field("format", Json_decode.string, param);
                }), json),
          /* url */Json_decode.optional((function (param) {
                  return Json_decode.field("url", Json_decode.string, param);
                }), json),
          /* vcodec */Json_decode.optional((function (param) {
                  return Json_decode.field("vcodec", Json_decode.string, param);
                }), json),
          /* tbr */Json_decode.optional((function (param) {
                  return Json_decode.field("tbr", Json_decode.$$float, param);
                }), json),
          /* abr */Json_decode.optional((function (param) {
                  return Json_decode.field("abr", Json_decode.$$float, param);
                }), json),
          /* fps */Json_decode.optional((function (param) {
                  return Json_decode.field("fps", Json_decode.$$float, param);
                }), json),
          /* player_url */Json_decode.optional((function (param) {
                  return Json_decode.field("player_url", Json_decode.string, param);
                }), json),
          /* downloader_options */Json_decode.optional((function (param) {
                  return Json_decode.field("downloader_options", downloader_options, param);
                }), json),
          /* ext */Json_decode.optional((function (param) {
                  return Json_decode.field("ext", Json_decode.string, param);
                }), json),
          /* filesize */Json_decode.optional((function (param) {
                  return Json_decode.field("filesize", Json_decode.$$int, param);
                }), json),
          /* format_id */Json_decode.optional((function (param) {
                  return Json_decode.field("format_id", Json_decode.string, param);
                }), json),
          /* acodec */Json_decode.optional((function (param) {
                  return Json_decode.field("acodec", Json_decode.string, param);
                }), json),
          /* width */Json_decode.optional((function (param) {
                  return Json_decode.field("width", Json_decode.$$int, param);
                }), json),
          /* height */Json_decode.optional((function (param) {
                  return Json_decode.field("height", Json_decode.$$int, param);
                }), json),
          /* resolution */Json_decode.optional((function (param) {
                  return Json_decode.field("resolution", Json_decode.string, param);
                }), json)
        ];
}

function thumbnail(json) {
  return /* record */[
          /* id */Json_decode.optional((function (param) {
                  return Json_decode.field("id", Json_decode.string, param);
                }), json),
          /* url */Json_decode.optional((function (param) {
                  return Json_decode.field("url", Json_decode.string, param);
                }), json)
        ];
}

function video(json) {
  return /* record */[
          /* protocol */Json_decode.optional((function (param) {
                  return Json_decode.field("protocol", Json_decode.string, param);
                }), json),
          /* extractor */Json_decode.optional((function (param) {
                  return Json_decode.field("extractor", Json_decode.string, param);
                }), json),
          /* upload_date */Json_decode.optional((function (param) {
                  return Json_decode.field("upload_date", Json_decode.string, param);
                }), json),
          /* creator */Json_decode.optional((function (param) {
                  return Json_decode.field("creator", Json_decode.string, param);
                }), json),
          /* series */Json_decode.optional((function (param) {
                  return Json_decode.field("series", Json_decode.string, param);
                }), json),
          /* format_note */Json_decode.optional((function (param) {
                  return Json_decode.field("format_note", Json_decode.string, param);
                }), json),
          /* chapters */Json_decode.optional((function (param) {
                  return Json_decode.field("chapters", Json_decode.string, param);
                }), json),
          /* season_number */Json_decode.optional((function (param) {
                  return Json_decode.field("season_number", Json_decode.string, param);
                }), json),
          /* like_count */Json_decode.optional((function (param) {
                  return Json_decode.field("like_count", Json_decode.$$int, param);
                }), json),
          /* duration */Json_decode.optional((function (param) {
                  return Json_decode.field("duration", Json_decode.$$float, param);
                }), json),
          /* fulltitle */Json_decode.optional((function (param) {
                  return Json_decode.field("fulltitle", Json_decode.string, param);
                }), json),
          /* player_url */Json_decode.optional((function (param) {
                  return Json_decode.field("player_url", Json_decode.string, param);
                }), json),
          /* id */Json_decode.optional((function (param) {
                  return Json_decode.field("id", Json_decode.string, param);
                }), json),
          /* view_count */Json_decode.optional((function (param) {
                  return Json_decode.field("view_count", Json_decode.string, param);
                }), json),
          /* playlist */Json_decode.optional((function (param) {
                  return Json_decode.field("playlist", Json_decode.string, param);
                }), json),
          /* title */Json_decode.optional((function (param) {
                  return Json_decode.field("title", Json_decode.string, param);
                }), json),
          /* _filename */Json_decode.optional((function (param) {
                  return Json_decode.field("_filename", Json_decode.string, param);
                }), json),
          /* format */Json_decode.optional((function (param) {
                  return Json_decode.field("format", Json_decode.string, param);
                }), json),
          /* ext */Json_decode.optional((function (param) {
                  return Json_decode.field("ext", Json_decode.string, param);
                }), json),
          /* playlist_index */Json_decode.optional((function (param) {
                  return Json_decode.field("playlist_index", Json_decode.$$int, param);
                }), json),
          /* dislike_count */Json_decode.optional((function (param) {
                  return Json_decode.field("dislike_count", Json_decode.$$int, param);
                }), json),
          /* average_rating */Json_decode.optional((function (param) {
                  return Json_decode.field("average_rating", Json_decode.$$float, param);
                }), json),
          /* abr */Json_decode.optional((function (param) {
                  return Json_decode.field("abr", Json_decode.$$int, param);
                }), json),
          /* uploader_url */Json_decode.optional((function (param) {
                  return Json_decode.field("uploader_url", Json_decode.string, param);
                }), json),
          /* subtitles */Json_decode.optional((function (param) {
                  return Json_decode.field("subtitles", (function (param) {
                                return Json_decode.dict(Json_decode.string, param);
                              }), param);
                }), json),
          /* age_limit */Json_decode.optional((function (param) {
                  return Json_decode.field("age_limit", Json_decode.$$int, param);
                }), json),
          /* annotations */Json_decode.optional((function (param) {
                  return Json_decode.field("annotations", Json_decode.string, param);
                }), json),
          /* webpage_url_basename */Json_decode.optional((function (param) {
                  return Json_decode.field("webpage_url_basename", Json_decode.string, param);
                }), json),
          /* acodec */Json_decode.optional((function (param) {
                  return Json_decode.field("acodec", Json_decode.string, param);
                }), json),
          /* display_id */Json_decode.optional((function (param) {
                  return Json_decode.field("display_id", Json_decode.string, param);
                }), json),
          /* automatic_captions */Json_decode.optional((function (param) {
                  return Json_decode.field("automatic_captions", (function (param) {
                                return Json_decode.dict(Json_decode.string, param);
                              }), param);
                }), json),
          /* description */Json_decode.optional((function (param) {
                  return Json_decode.field("description", Json_decode.string, param);
                }), json),
          /* tags */Json_decode.optional((function (param) {
                  return Json_decode.field("tags", (function (param) {
                                return Json_decode.array(Json_decode.string, param);
                              }), param);
                }), json),
          /* requested_subtitles */Json_decode.optional((function (param) {
                  return Json_decode.field("requested_subtitles", Json_decode.string, param);
                }), json),
          /* start_time */Json_decode.optional((function (param) {
                  return Json_decode.field("start_time", Json_decode.$$int, param);
                }), json),
          /* uploader */Json_decode.optional((function (param) {
                  return Json_decode.field("uploader", Json_decode.string, param);
                }), json),
          /* format_id */Json_decode.optional((function (param) {
                  return Json_decode.field("format_id", Json_decode.string, param);
                }), json),
          /* episode_number */Json_decode.optional((function (param) {
                  return Json_decode.field("episode_number", Json_decode.$$int, param);
                }), json),
          /* uploader_id */Json_decode.optional((function (param) {
                  return Json_decode.field("uploader_id", Json_decode.string, param);
                }), json),
          /* categories */Json_decode.optional((function (param) {
                  return Json_decode.field("categories", (function (param) {
                                return Json_decode.array(Json_decode.string, param);
                              }), param);
                }), json),
          /* thumbnails */Json_decode.optional((function (param) {
                  return Json_decode.field("thumbnails", (function (param) {
                                return Json_decode.array(thumbnail, param);
                              }), param);
                }), json),
          /* width */Json_decode.optional((function (param) {
                  return Json_decode.field("width", Json_decode.$$int, param);
                }), json),
          /* height */Json_decode.optional((function (param) {
                  return Json_decode.field("height", Json_decode.$$int, param);
                }), json),
          /* fps */Json_decode.optional((function (param) {
                  return Json_decode.field("fps", Json_decode.$$float, param);
                }), json),
          /* formats */Json_decode.optional((function (param) {
                  return Json_decode.field("formats", (function (param) {
                                return Json_decode.array(format, param);
                              }), param);
                }), json)
        ];
}

function metadata(url) {
  var partial_arg = /* array */[
    "--dump-json",
    "-f",
    "best",
    url
  ];
  var func = function (param, param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8, param$9, param$10, param$11) {
    return Child_process$LidcoreBsNode.execFile("youtube-dl", partial_arg, param, param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8, param$9, param$10, param$11);
  };
  var arg = /* Some */[7000.0 * 1024.0];
  var arg$1 = function (param, param$1, param$2, param$3) {
    return Curry._5(func, param, param$1, param$2, param$3, arg);
  };
  return BsCallback.$great$great((function (eta) {
                return Curry._7(arg$1(/* None */0, /* None */0, /* None */0, /* None */0), /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, eta);
              }), (function (param) {
                var partial_arg = video(Json.parseOrRaise(param[0]));
                return (function (param) {
                    return BsCallback.$$return(partial_arg, param);
                  });
              }));
}

exports.metadata = metadata;
/* Child_process-LidcoreBsNode Not a pure module */
